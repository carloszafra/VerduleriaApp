// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VerduleriaApp.Data.Context;

namespace VerduleriaApp.Migrations
{
    [DbContext(typeof(DBcontext))]
    partial class DBcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("VerduleriaApp.Data.Models.Concept", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("IdSale")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Concepts");

                    b.HasIndex("IdProduct");

                    b.HasIndex("IdSale");

                    b.ToTable("Concepts");
                });

            modelBuilder.Entity("VerduleriaApp.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Img")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<float>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id")
                        .HasName("PK_Products");

                    b.HasIndex("Name")
                        .HasDatabaseName("Idx_Name");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Tomates Frescos",
                            Img = "https://images.app.goo.gl/2eWj98yqJfpHnH5B7",
                            Name = "Tomates",
                            Price = 100f,
                            Stock = 200,
                            Type = "fruta"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Fresas ideales para batidos y ensaladas de frutas",
                            Img = "https://images.app.goo.gl/jmrrXLpTCAeRpDCNA",
                            Name = "Fresas",
                            Price = 150f,
                            Stock = 250,
                            Type = "fruta"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Ideales para jugos",
                            Img = "https://images.app.goo.gl/XwLsj8CW3nyMEQNM9",
                            Name = "Naranjas",
                            Price = 90f,
                            Stock = 300,
                            Type = "fruta"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Buenas para ensaladas",
                            Img = "https://images.app.goo.gl/QxwFnaTZqapADkdE7",
                            Name = "Cebollas",
                            Price = 100f,
                            Stock = 200,
                            Type = "vegetal"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Frescas recien traidas del campo",
                            Img = "https://images.app.goo.gl/9ZuU2n4K1treJwU98",
                            Name = "Lechuga",
                            Price = 100f,
                            Stock = 200,
                            Type = "vegetal"
                        });
                });

            modelBuilder.Entity("VerduleriaApp.Data.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id")
                        .HasName("PK_Sales");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("VerduleriaApp.Data.Models.Concept", b =>
                {
                    b.HasOne("VerduleriaApp.Data.Models.Product", "Product")
                        .WithMany("Concepts")
                        .HasForeignKey("IdProduct")
                        .HasConstraintName("FK_Concept_Product")
                        .IsRequired();

                    b.HasOne("VerduleriaApp.Data.Models.Sale", "Sale")
                        .WithMany("Concepts")
                        .HasForeignKey("IdSale")
                        .HasConstraintName("FK_Concept_Sale")
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("VerduleriaApp.Data.Models.Product", b =>
                {
                    b.Navigation("Concepts");
                });

            modelBuilder.Entity("VerduleriaApp.Data.Models.Sale", b =>
                {
                    b.Navigation("Concepts");
                });
#pragma warning restore 612, 618
        }
    }
}
